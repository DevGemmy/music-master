{"version":3,"sources":["Profile.jsx","Gallery.jsx","App.jsx","index.js"],"names":["Profile","artist","name","followers","total","images","url","genres","this","props","react_default","a","createElement","className","alt","src","map","genre","index","length","concat","key","Component","Gallery","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","playing","playingUrl","audio","previewUrl","Audio","playingg","pause","setState","play","_this2","tracks","track","trackImg","album","onClick","playAudio","preview_url","App","query","console","log","FETCH_URL","fetch","method","then","response","json","artists","items","id","_this3","FormGroup","InputGroup","FormControl","type","placeholder","value","onChange","event","target","onKeyPress","search","Addon","onCLick","Button","src_Profile","src_Gallery","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d2de4015.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        let artist = {name: '', followers: {total: ''}, images: [{url: ''}], genres: []};\r\n        artist = this.props.artist !== null ? this.props.artist : artist; \r\n\r\n        return (\r\n            <div className='Profile'>\r\n                <img \r\n                    alt='profile'\r\n                    className='Profile-img'\r\n                    src={artist.images[0].url}\r\n                />\r\n                <div className='Profile-info'>\r\n                    <div className='Profile-name'>{artist.name}</div>\r\n                    <div className='Profile-followers'>\r\n                        {artist.followers.total} followers\r\n                    </div>\r\n                    <div className='Profile-genres'>\r\n                        {\r\n                            artist.genres.map((genre, index) => {\r\n                                genre = genre !== artist.genres[artist.genres.length - 1] \r\n                                              ? ` ${genre},` \r\n                                              : ` & ${genre}`;\r\n                                return(\r\n                                    <span key={index}>{genre}</span>\r\n                                )\r\n                            }) \r\n                        }\r\n                    </div>\r\n                </div> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Gallery extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playing: false,\r\n            playingUrl: '',\r\n            audio: null\r\n        }\r\n    }\r\n\r\n    playAudio(previewUrl) {\r\n        let audio = new Audio(previewUrl);\r\n        if (!this.state.playingg) {\r\n            audio.play()\r\n            this.setState({\r\n                playing: true,\r\n                playingUrl: previewUrl,\r\n                audio\r\n            })\r\n        } else {\r\n            if (this.state.playingUrl === previewUrl) {\r\n                this.state.audio.pause();\r\n                this.setState({\r\n                    playing: false \r\n                })\r\n            } else {\r\n                this.state.audio.pause();\r\n                audio.play()\r\n                this.setState({\r\n                    playing: true,\r\n                    playingUrl: previewUrl,\r\n                    audio\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { tracks } = this.props;\r\n        return(\r\n            <div>\r\n                {\r\n                    tracks.map((track, index) => {\r\n                        const trackImg = track.album.images[0].url;\r\n                        return(\r\n                            <div\r\n                                key={index}\r\n                                className='Track'\r\n                                onClick={() => this.playAudio(track.preview_url)}\r\n                            >\r\n                                <img \r\n                                    src={trackImg}\r\n                                    className='Track-img'\r\n                                    alt='track'\r\n                                />\r\n                                <div className='Track-play'>\r\n                                    <div className='Track-play-inner'>\r\n                                        {\r\n                                            this.state.playingUrl === track.preview_url\r\n                                            ? <span>| |</span>\r\n                                            : <span>&#9654;</span>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <p className='Track-text'>\r\n                                    {track.name}\r\n                                </p>\r\n                            </div>\r\n                        )\r\n                        \r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Gallery;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { FormGroup, FormControl, InputGroup, Button } from 'react-bootstrap';\r\nimport Profile from './Profile';\r\nimport Gallery from './Gallery';\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            query: '',\r\n            artist: null\r\n        }\r\n    }\r\n\r\n    search() {\r\n        console.log('this.state', this.state);\r\n        const BASE_URL = 'https://api.spotify.com/v1/search?';\r\n        let FETCH_URL = `${BASE_URL} + 'q=' + ${this.state.query}'&type=artist&limit=1'`;\r\n        const ALBUM_URL = 'https://api.spotify.com/v1/artists/';\r\n\r\n        fetch(FETCH_URL, {\r\n            method: 'GET'\r\n        })\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            const artist = json.artists.items[0];\r\n            this.setState({artist});\r\n\r\n            FETCH_URL = `${ALBUM_URL}${artist.id}/top-tracks?country=NG&`\r\n            fetch(FETCH_URL, {\r\n                method: 'GET'\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                const { tracks } = json;\r\n                this.setState({tracks});\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='App'>\r\n                <div className='App-title'>Music Master</div>\r\n                <FormGroup>\r\n                    <InputGroup>\r\n                        <FormControl \r\n                            type=\"text\"\r\n                            placeholder=\"Search For An Artist\"\r\n                            value={this.state.query}\r\n                            onChange={event => {this.setState({query: event.target.value})}}\r\n                            onKeyPress={event => {\r\n                                if( event.key === 'Enter' ) {\r\n                                    this.search()\r\n                                }\r\n                            }}\r\n                        />\r\n                        <InputGroup.Addon onCLick={() => this.search()}>\r\n                            {/* <Glyphicon glyph='search'></Glyphicon> */}\r\n                            <Button>Submit</Button>\r\n                        </InputGroup.Addon>\r\n                    </InputGroup>\r\n                </FormGroup>\r\n                {\r\n                    this.state.artist !== null\r\n                    ?  <div> \r\n                            <Profile \r\n                            artist={this.state.artist}\r\n                            />\r\n                            <Gallery \r\n                                tracks={this.state.tracks}\r\n                            />\r\n                        </div>\r\n                    : <div></div>\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>, document.getElementById('root')\r\n);"],"sourceRoot":""}